[{"/Users/elijahmccoy/Dev/cuue/cuue/src/App.js":"1","/Users/elijahmccoy/Dev/cuue/cuue/src/firebase.js":"2","/Users/elijahmccoy/Dev/cuue/cuue/src/index.js":"3","/Users/elijahmccoy/Dev/cuue/cuue/src/components/header/index.js":"4","/Users/elijahmccoy/Dev/cuue/cuue/src/screens/dahsboard-screen/index.js":"5","/Users/elijahmccoy/Dev/cuue/cuue/src/screens/no-match-screen/index.js":"6","/Users/elijahmccoy/Dev/cuue/cuue/src/screens/connect-screen/index.js":"7","/Users/elijahmccoy/Dev/cuue/cuue/src/screens/sign-in-screen/index.js":"8","/Users/elijahmccoy/Dev/cuue/cuue/src/components/instructions/index.js":"9"},{"size":1150,"mtime":1606587765861,"results":"10","hashOfConfig":"11"},{"size":584,"mtime":1606531577423,"results":"12","hashOfConfig":"11"},{"size":198,"mtime":1606466770100,"results":"13","hashOfConfig":"11"},{"size":1279,"mtime":1606532288797,"results":"14","hashOfConfig":"11"},{"size":1990,"mtime":1606601203082,"results":"15","hashOfConfig":"11"},{"size":189,"mtime":1606500528090,"results":"16","hashOfConfig":"11"},{"size":636,"mtime":1606527008124,"results":"17","hashOfConfig":"11"},{"size":7963,"mtime":1606532219038,"results":"18","hashOfConfig":"11"},{"size":1581,"mtime":1606603519500,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cpw1e5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elijahmccoy/Dev/cuue/cuue/src/App.js",[],"/Users/elijahmccoy/Dev/cuue/cuue/src/firebase.js",[],"/Users/elijahmccoy/Dev/cuue/cuue/src/index.js",[],["41","42"],"/Users/elijahmccoy/Dev/cuue/cuue/src/components/header/index.js",[],"/Users/elijahmccoy/Dev/cuue/cuue/src/screens/dahsboard-screen/index.js",["43","44","45"],"/Users/elijahmccoy/Dev/cuue/cuue/src/screens/no-match-screen/index.js",[],"/Users/elijahmccoy/Dev/cuue/cuue/src/screens/connect-screen/index.js",["46"],"import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap'\nimport spotify from '../../assets/spotify.png';\n\n\nconst Connect = () => {\n\n    return (\n        <>\n        <div className=\"connect\">\n        </div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Connect!</h2>\n                    <Button className=\"ml-5\"variant=\"light\" size=\"lg\"><img style={{ width: \"2vw\"}} className=\"mr-2\" src={spotify} alt=\"spotify icon\"/>Connect with Spotify</Button>                   \n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default Connect;","/Users/elijahmccoy/Dev/cuue/cuue/src/screens/sign-in-screen/index.js",["47","48","49"],"import React from 'react';\nimport {auth } from '../../firebase'\nimport {db } from '../../firebase'\nimport { encode as btoa } from 'base-64';\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport { Button, Card } from 'react-bootstrap';\nimport spotify from '../../assets/spotify.png';\nimport logo from '../../assets/Jukebox_Fixed.png';\n\n\nconst scopesArr = ['user-modify-playback-state','user-read-currently-playing','user-read-playback-state','user-library-modify',\n                   'user-library-read','playlist-read-private','playlist-read-collaborative','playlist-modify-public',\n                   'playlist-modify-private','user-read-recently-played','user-top-read'];\nconst scopes = scopesArr.join(' ');\n\n\n\nconst getSpotifyCredentials = async () => {\n    return {\n    clientId:'24ee46b7be184b5eac0b50e6e3a5c271',\n    clientSecret:'47536ed52288486bb0cb1e7620aa369f',\n    redirectUri: auth.getRedirectUrl()}\n  }\n  const getAuthorizationCode = async () => {\n    let result = '';\n    try {\n      const credentials = await getSpotifyCredentials() //we wrote this function above\n      const redirectUrl = auth.getRedirectUrl(); //this will be something like https://auth.expo.io/@your-username/your-app-slug\n      result = await auth.startAsync({\n        authUrl:\n          'https://accounts.spotify.com/authorize' +\n          '?response_type=code' +\n          '&client_id=' +\n          credentials.clientId +\n          (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n          '&redirect_uri=' +\n          encodeURIComponent(redirectUrl),\n      })\n    } catch (err) {\n      console.error(err)\n    }\n    return result.params.code\n  }\n\nconst setUserData= async (key, item) => {\n  try {\n      //we want to wait for the Promise returned by localStorage.setItem()\n      //to be resolved to the actual value before returning the value\n      var jsonOfItem = await localStorage.setItem(key, JSON.stringify(item));\n      return jsonOfItem;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nconst getUserData = async (key)=> {\n  try {\n    const retrievedItem =  await localStorage.getItem(key);\n    const item = JSON.parse(retrievedItem);\n    return item;\n  } catch (error) {\n    console.log(error.message);\n  }\n  return\n}\n\n\n\n\n\nconst getTokens = async () => {\n  try {\n    const authorizationCode = await getAuthorizationCode() //we wrote this function above\n    const credentials = await getSpotifyCredentials() //we wrote this function above (could also run this outside of the functions and store the credentials in local scope)\n    const credsB64 = btoa(`${credentials.clientId}:${credentials.clientSecret}`);\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${credsB64}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${\n        credentials.redirectUri\n      }`,\n    });\n    const responseJson = await response.json();\n    // destructure the response and rename the properties to be in camelCase to satisfy my linter ;)\n    const {\n      access_token: accessToken,\n      refresh_token: refreshToken,\n      expires_in: expiresIn,\n    } = responseJson;\n    const expirationTime = new Date().getTime() + expiresIn * 1000;\n    await setUserData('accessToken', accessToken);\n    await setUserData('refreshToken', refreshToken);\n    await setUserData('expirationTime', expirationTime);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport const refreshTokens = async () => {\n  try {\n    const credentials = await getSpotifyCredentials()\n    const credsB64 = btoa(`${credentials.clientId}:${credentials.clientSecret}`);\n    const refreshToken = await getUserData('refreshToken');\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${credsB64}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n    });\n    const responseJson = await response.json();\n    if (responseJson.error) {\n      await getTokens();\n    } else {\n      const {\n        access_token: newAccessToken,\n        refresh_token: newRefreshToken,\n        expires_in: expiresIn,\n      } = responseJson;\n\n      const expirationTime = new Date().getTime() + expiresIn * 1000;\n      await setUserData('accessToken', newAccessToken);\n      if (newRefreshToken) {\n        await setUserData('refreshToken', newRefreshToken);\n      }\n      await setUserData('expirationTime', expirationTime);\n  }\n } catch (err) {\n    console.error(err)\n  }\n}\n\n\n\nexport const getValidSPObj = async () => {\n  const tokenExpirationTime = await getUserData('expirationTime');\n  if (new Date().getTime() > tokenExpirationTime) {\n    // access token has expired, so we need to use the refresh token\n    await refreshTokens();\n  }\n  const accessToken = await getUserData('accessToken');\n  var sp = new SpotifyWebAPI();\n  await sp.setAccessToken(accessToken);\n  await setUserData('spotify_obj', sp);\n  return sp;\n}\nexport const getUserPlaylists = async () => {\n  const sp = await getValidSPObj();\n  const { id: userId } = await sp.getMe();\n  const { items: playlists } = await sp.getUserPlaylists(userId, { limit: 50 });\n  console.log(playlists)\n  return playlists;\n};\nexport const getQuery = async () => {\n  const sp = await getValidSPObj();\n  const item = await sp.searchTracks(\"hello\", {limit: 5}).then(function(data) {\n    console.log('Artist: ', data.tracks.items[0].artists[0].name);\n    console.log('Artist: ', data.tracks.items[1].artists[0].name);\n    console.log('Artist: ', data.tracks.items[2].artists[0].name);\n  })\n};\n//\nexport const getQuery2 = async () => {\n  const sp = await getValidSPObj();\n  const item = await sp.getMyCurrentPlayingTrack().then(function(data) {\n    console.log('Artist: ', data);\n  })\n};\n//Get playlist by id\nexport const getQuery3 = async () => {\n  const sp = await getValidSPObj();\n  const item = await sp.getPlaylist('6ZQKZNrw7rqQeWZ9iiEO5y').then(function(data) {\n    console.log('Artist: ', data);\n  })\n};\n//Ger username\nexport const getQuery4 = async () => {\n  const sp = await getValidSPObj();\n  const item = await sp.getMe().then(function(data) {\n    //console.log(data.display_name);\n    //console.log(data.id);\n    return data;\n  })\n  return item;\n};\n\nconst SignIn = ({navigation}) => {\n\n\n    return (\n        <div>\n            <Card>\n        <img\n          style={{width: 160, height: 160, marginTop: \"20%\", marginBottom: 40}}\n          src={logo} \n       alt=\"Logo\"\n       />\n        <span>\n          Connect!\n          </span>\n        <Button \n        variant=\"light\" size=\"lg\"\n        style={{marginTop: \"5vh\"}}\n          onClick={() => {\n            getTokens().then(getValidSPObj).then(async function(){\n              const data = await getQuery4();\n              console.log(data.images)\n              if (data.images.length === 0){\n                console.log('hello')\n                db.ref('/users/'+data.id+'/').set({\n                  name: data.display_name,\n                  profile_picture: 'https://i.stack.imgur.com/l60Hf.jpeg'\n            }).then(window.pp='https://i.stack.imgur.com/l60Hf.jpeg').then(window.name=data.display_name).then(async function(){await navigation.navigate('Home')})\n              }\n              else{\n                \n                db.ref('/users/'+data.id+'/').set({\n                  name: data.display_name,\n                  profile_picture: data.images[0].url\n            }).then(window.pp=data.images[0].url).then(window.name=data.display_name).then(async function(){await navigation.navigate('Home')})\n              }\n\n   })\n          }}\n        ><img style={{ width: \"3vw\",}} className=\"mr-4\" src={spotify} alt=\"spotify icon\"/> Get connected with Spotify</Button>\n        </Card>\n        </div>\n    );\n};\n\nexport default SignIn;","/Users/elijahmccoy/Dev/cuue/cuue/src/components/instructions/index.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":23},{"ruleId":"54","severity":1,"message":"58","line":3,"column":41,"nodeType":"56","messageId":"57","endLine":3,"endColumn":45},{"ruleId":"54","severity":1,"message":"59","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":22},{"ruleId":"54","severity":1,"message":"60","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},{"ruleId":"54","severity":1,"message":"61","line":160,"column":9,"nodeType":"56","messageId":"57","endLine":160,"endColumn":13},{"ruleId":"54","severity":1,"message":"61","line":169,"column":9,"nodeType":"56","messageId":"57","endLine":169,"endColumn":13},{"ruleId":"54","severity":1,"message":"61","line":176,"column":9,"nodeType":"56","messageId":"57","endLine":176,"endColumn":13},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'HeightRounded' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Form' is defined but never used.","'item' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]